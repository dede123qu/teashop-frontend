{"ast":null,"code":"import axios from \"axios\";\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = \"https://backend-teashop1.herokuapp.com/\";\n}\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  if (localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common[\"Authorization\"] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async (user_name, email, password) => {\n      const savedPost = await api.post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post(\"/users/signin/\", {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.getUsers = async () => {\n      const posts = await api.get(\"/users/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n    this.getItems = async () => {\n      let url = \"/items/\";\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n    this.getCarts = async () => {\n      const carts = await api.get(\"/carts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n    this.addCarts = async item_id => {\n      const savedCart = await api.post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.deleteCarts = async cart_id => {\n      const response = await api.delete(\"/carts/delete/\" + cart_id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n    this.orderAdd = async function () {\n      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const order = await api.post(\"/orders/add/\", params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n    this.getPosts = async () => {\n      const posts = await api.get(\"/posts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"image\", image);\n      const savedPost = await api.post(\"/posts/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.deletePost = async id => {\n      const response = await api.delete(\"/posts/delete/\" + id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","localStorage","getItem","common","JSON","parse","token","err","console","error","API","signUp","user_name","email","password","savedPost","post","then","response","data","catch","Error","signIn","getUsers","posts","get","getItems","url","items","getCarts","carts","addCarts","item_id","savedCart","item","quantity","updateCarts","cart_id","put","deleteCarts","delete","orderAdd","params","order","getPosts","addPost","name","body","image","formData","FormData","append","deletePost","id"],"sources":["/Users/musubimanagement/Desktop/tea-shop-frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\n\nvar baseURL;\nif (\n  process.env.REACT_APP_ENVIRONMENT &&\n  process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n) {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = \"https://backend-teashop1.herokuapp.com/\";\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    if (localStorage.getItem(LOGIN_USER_KEY)) {\n      config.headers.common[\"Authorization\"] = JSON.parse(\n        localStorage.getItem(LOGIN_USER_KEY)\n      ).token;\n    }\n\n    return config;\n  },\n  (err) => {\n    console.error(err);\n  }\n);\n\nexport default class API {\n  //////////////////////////////\n  // USERS\n  /////////////////////////////\n\n  signUp = async (user_name, email, password) => {\n    const savedPost = await api\n      .post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n  signIn = async (email, password) => {\n    const savedPost = await api\n      .post(\"/users/signin/\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n  getUsers = async () => {\n    const posts = await api\n      .get(\"/users/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return posts;\n  };\n\n  // ///////////////////////////////////////\n  // Items\n  // ///////////////////////////////////////\n\n  getItems = async () => {\n    let url = \"/items/\";\n    const items = await api\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return items;\n  };\n\n  // ///////////////////////////////////////\n  // Carts\n  // //////////////////////////////////////\n\n  getCarts = async () => {\n    const carts = await api\n      .get(\"/carts/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return carts;\n  };\n\n  addCarts = async (item_id) => {\n    const savedCart = await api\n      .post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  updateCarts = async (cart_id, quantity) => {\n    const savedCart = await api\n      .put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  deleteCarts = async (cart_id) => {\n    const response = await api\n      .delete(\"/carts/delete/\" + cart_id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return response;\n  };\n\n  ////////////////////////////////////////////\n  // Order/Checkout\n  // ////////////////////////////////////////\n\n  orderAdd = async (params = {}) => {\n    const order = await api\n      .post(\"/orders/add/\", params)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return order;\n  };\n\n  ///////////////////////////////////////////\n  // Reference Post\n  //////////////////////////////////////////\n\n  getPosts = async () => {\n    const posts = await api\n      .get(\"/posts/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return posts;\n  };\n\n  addPost = async (name, body, image) => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"body\", body);\n    formData.append(\"image\", image);\n    const savedPost = await api\n      .post(\"/posts/add/\", formData)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n  deletePost = async (id) => {\n    const response = await api\n      .delete(\"/posts/delete/\" + id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return response;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}